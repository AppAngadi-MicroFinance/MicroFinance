<Application x:Class="MicroFinance.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:MicroFinance"
             xmlns:validation="clr-namespace:MicroFinance.Validations"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <!--<Primary BackGround>-->
        <Style x:Key="PrimaryBackground" TargetType="Page">
            <Setter Property="Background" Value="#FEF2E4"></Setter>
            <Setter Property="Height" Value="660"></Setter>
            <Setter Property="Width" Value="1366"></Setter>
        </Style>
        <!--<Primary BackGround>-->
        <Style x:Key="PrimaryGrid" TargetType="Grid">
            <Setter Property="Background" Value="#FEF2E4"></Setter>
            <Setter Property="Height" Value="660"></Setter>
            <Setter Property="Width" Value="1366"></Setter>
        </Style>
<!--Employee item panel Template-->
        
        <!--<Regular Font>-->
            <Style x:Key="Regular" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="Roboto"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Foreground" Value="#2D1414"/>
        </Style>

        
        <!--Defalult textBoxSize-->
        <Style x:Key="TextBoxSizeDefault" TargetType="TextBox">
            <Setter Property="Width" Value="250"></Setter>
        </Style>
        <!--for title text style-->
        <Style x:Key="Title" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="Roboto"/>
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="Foreground" Value="#433B65"/>
        </Style>
        <!--for Subtitle text style-->
        <Style x:Key="SubTitle" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="Roboto"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Foreground" Value="#781F9F"/>
        </Style>
        <!--<Regular Input>-->
        <Style TargetType="TextBox" x:Key="InputBox">
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <StackPanel>
                            <Border>
                                <AdornedElementPlaceholder 
                            ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}">
                                </AdornedElementPlaceholder>
                            </Border>
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="FontSize" Value="16"></Setter>
            <Setter Property="HorizontalContentAlignment" Value="Left"></Setter>
            <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
            <Setter Property="FontFamily" Value="Roboto"></Setter>
            <Setter Property="Height" Value="30"></Setter>
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                    <Setter Property="BorderThickness" Value="2"></Setter>
                    <Setter Property="BorderBrush" Value="red"></Setter>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="Transparent"></Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--<Calander>-->
        <Style x:Key="DateSelecter" TargetType="DatePicker">
            <Setter Property="FontFamily" Value="roboto"></Setter>
            <Setter Property="FontSize" Value="16"></Setter>
            <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
            <Setter Property="Height" Value="30"></Setter>
        </Style>
        
        <!--<Buttons>-->
            <!--<Add Button>-->
        <Style TargetType="Button" x:Key="Add">
            <Setter Property="Template" >
                <Setter.Value>
                    <ControlTemplate>
                        <Border x:Name="addborder" Width="30" Height="30"  Background="Transparent">
                            <Grid>
                                <Image Source="Asserts\Icons\Add.png"></Image>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!--SAmple Button-->
        <Style TargetType="Button" x:Key="BigButton">
           
            <Setter Property="Height" Value="40" />
            <Setter Property="Width" Value="120" />
            <Setter Property="Background" Value="#F77604"/>
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="FontSize" Value="25"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <ContentPresenter x:Name="ButtonContentPresenter"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center">
                        </ContentPresenter>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            
        </Style>
        <!--For Primary Action Buttons-->
        <ControlTemplate x:Key="orangebutton" TargetType="{x:Type Button}">
            <Grid x:Name="mygrid" Width="120" Height="40" Background="#F77604">
                <!--<TextBlock Text="{Binding ButtonContentPresenter}" Foreground="White" FontFamily="Roboto" FontSize="16" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBlock>-->
                <ContentPresenter x:Name="ButtonContentPresenter"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center">
                </ContentPresenter>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="mygrid" Value="#fcb372" Property="Background" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style TargetType="{x:Type Button}" x:Key="orange">
            <Setter Property="FontSize" Value="16"></Setter>
            <Setter Property="Foreground" Value="White"></Setter>
            <Setter Property="FontFamily" Value="Roboto"></Setter>
            <Setter Property="FontWeight" Value="Medium"></Setter>
            <Setter Property="Template" Value="{StaticResource orangebutton}">
            </Setter>
        </Style>
        <!--For Show Symbol-->
        <Style TargetType="Button" x:Key="Show">
            <Setter Property="Template" >
                <Setter.Value>
                    <ControlTemplate>
                        <Border Width="40" Height="40"  Background="Transparent">
                            <Grid>
                                <Image Source="Asserts\Icons\Show-01-WF.png"></Image>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--for combo box-->
        <Style x:Key="combo" TargetType="ComboBox" >
            <Setter Property="Height" Value="30"/>
            <Setter Property="Width" Value="250"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="Roboto"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Foreground" Value="#2D1414"/>
            <Setter Property="Background" Value="Bisque"/>
        </Style>
        <!--Date Picker-->
        <Style x:Key="datepicker" TargetType="DatePicker">
            
        </Style>
        <!--For Close-->
        <Style TargetType="Button" x:Key="Close">
            <Setter Property="Template" >
                <Setter.Value>
                    <ControlTemplate>
                        <Border Width="40" Height="40"  Background="White">
                            <Grid>
                                <Image Source="Asserts\Icons\Close.png"></Image>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Button" x:Key="ModalClose">
            <Setter Property="Template" >
                <Setter.Value>
                    <ControlTemplate>
                        <Border Width="30" Height="30"  Background="White">
                            <Grid>
                                <Image Source="Asserts\Icons\Close.png"></Image>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--For Cancel -->
        <ControlTemplate x:Key="Bluebutton" TargetType="{x:Type Button}">
            <Grid x:Name="mygrid" Width="250" Height="40" Background="#0EABF2">
                <TextBlock Text="Edit" Foreground="White" FontFamily="Roboto" FontSize="16" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBlock>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="mygrid" Value="#68cbf7" Property="Background" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style TargetType="{x:Type Button}" x:Key="Blue">
            <Setter Property="Template" Value="{StaticResource Bluebutton}">
            </Setter>
        </Style>
        
        <!--Browse Button-->
        <ControlTemplate x:Key="BrowseBtnTemp" TargetType="{x:Type Button}">
            <Grid x:Name="mygrid" Width="120" Height="40" Background="#0EABF2">
                <TextBlock Text="Browse" Foreground="White" FontFamily="Roboto" FontSize="16" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBlock>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="mygrid" Value="#68cbf7" Property="Background" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style TargetType="{x:Type Button}" x:Key="BrowseBtn">
            <Setter Property="Template" Value="{StaticResource BrowseBtnTemp}">
            </Setter>
        </Style>

        <!--Capture Button-->
        <ControlTemplate x:Key="CapturebtnTemp" TargetType="{x:Type Button}">
            <Grid x:Name="mygrid" Width="120" Height="40" Background="#0EABF2">
                <TextBlock Text="Capture" Foreground="White" FontFamily="Roboto" FontSize="16" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBlock>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="mygrid" Value="#68cbf7" Property="Background"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style TargetType="{x:Type Button}" x:Key="CaptureBtn">
            <Setter Property="Template" Value="{StaticResource CapturebtnTemp}">
            </Setter>
        </Style>
        <!--For Cancel -->
        <ControlTemplate x:Key="Graybutton" TargetType="{x:Type Button}">
            <Grid x:Name="mygrid" Width="120" Height="40" Background="#7F7F7F">
                <!--<TextBlock Text="Cancel" Foreground="White" FontFamily="Roboto" FontSize="16" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBlock>-->
                <ContentPresenter x:Name="ButtonContentPresenter"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center">
                </ContentPresenter>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="mygrid" Value="#bfbfbf" Property="Background" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style TargetType="{x:Type Button}" x:Key="Gray">
            <Setter Property="FontSize" Value="16"></Setter>
            <Setter Property="Foreground" Value="White"></Setter>
            <Setter Property="FontFamily" Value="Roboto"></Setter>
            <Setter Property="FontWeight" Value="Medium"></Setter>
            <Setter Property="Template" Value="{StaticResource Graybutton}">
            </Setter>
        </Style>
    </Application.Resources>
</Application>
